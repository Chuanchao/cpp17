// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: position.proto

#include "position.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_position_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountPosition_position_2eproto;
namespace position {
class AccountPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountPosition> _instance;
} _AccountPosition_default_instance_;
class AccPosWrapperDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccPosWrapper> _instance;
} _AccPosWrapper_default_instance_;
}  // namespace position
static void InitDefaultsscc_info_AccPosWrapper_position_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::position::_AccPosWrapper_default_instance_;
    new (ptr) ::position::AccPosWrapper();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::position::AccPosWrapper::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AccPosWrapper_position_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AccPosWrapper_position_2eproto}, {
      &scc_info_AccountPosition_position_2eproto.base,}};

static void InitDefaultsscc_info_AccountPosition_position_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::position::_AccountPosition_default_instance_;
    new (ptr) ::position::AccountPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::position::AccountPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountPosition_position_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountPosition_position_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_position_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_position_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_position_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_position_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::position::AccountPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::position::AccountPosition, instrumentid_),
  PROTOBUF_FIELD_OFFSET(::position::AccountPosition, productid_),
  PROTOBUF_FIELD_OFFSET(::position::AccountPosition, direction_),
  PROTOBUF_FIELD_OFFSET(::position::AccountPosition, totalvolume_),
  PROTOBUF_FIELD_OFFSET(::position::AccountPosition, todayvolume_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::position::AccPosWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::position::AccPosWrapper, longpos_),
  PROTOBUF_FIELD_OFFSET(::position::AccPosWrapper, shortpos_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::position::AccountPosition)},
  { 10, -1, sizeof(::position::AccPosWrapper)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::position::_AccountPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::position::_AccPosWrapper_default_instance_),
};

const char descriptor_table_protodef_position_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016position.proto\022\010position\"\217\001\n\017AccountPo"
  "sition\022\024\n\014InstrumentID\030\001 \001(\t\022\021\n\tProductI"
  "D\030\002 \001(\t\022)\n\tDirection\030\003 \001(\0162\026.position.Po"
  "sDirection\022\023\n\013TotalVolume\030\004 \001(\003\022\023\n\013Today"
  "Volume\030\005 \001(\003\"h\n\rAccPosWrapper\022*\n\007longpos"
  "\030\001 \001(\0132\031.position.AccountPosition\022+\n\010sho"
  "rtpos\030\002 \001(\0132\031.position.AccountPosition*+"
  "\n\014PosDirection\022\014\n\010POS_LONG\020\000\022\r\n\tPOS_SHOR"
  "T\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_position_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_position_2eproto_sccs[2] = {
  &scc_info_AccPosWrapper_position_2eproto.base,
  &scc_info_AccountPosition_position_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_position_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_position_2eproto = {
  false, false, descriptor_table_protodef_position_2eproto, "position.proto", 331,
  &descriptor_table_position_2eproto_once, descriptor_table_position_2eproto_sccs, descriptor_table_position_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_position_2eproto::offsets,
  file_level_metadata_position_2eproto, 2, file_level_enum_descriptors_position_2eproto, file_level_service_descriptors_position_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_position_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_position_2eproto)), true);
namespace position {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PosDirection_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_position_2eproto);
  return file_level_enum_descriptors_position_2eproto[0];
}
bool PosDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AccountPosition::InitAsDefaultInstance() {
}
class AccountPosition::_Internal {
 public:
};

AccountPosition::AccountPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:position.AccountPosition)
}
AccountPosition::AccountPosition(const AccountPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instrumentid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instrumentid().empty()) {
    instrumentid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instrumentid(),
      GetArena());
  }
  productid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_productid().empty()) {
    productid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_productid(),
      GetArena());
  }
  ::memcpy(&totalvolume_, &from.totalvolume_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&totalvolume_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:position.AccountPosition)
}

void AccountPosition::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountPosition_position_2eproto.base);
  instrumentid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  productid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&totalvolume_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&totalvolume_)) + sizeof(direction_));
}

AccountPosition::~AccountPosition() {
  // @@protoc_insertion_point(destructor:position.AccountPosition)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instrumentid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  productid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountPosition::ArenaDtor(void* object) {
  AccountPosition* _this = reinterpret_cast< AccountPosition* >(object);
  (void)_this;
}
void AccountPosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountPosition& AccountPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountPosition_position_2eproto.base);
  return *internal_default_instance();
}


void AccountPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:position.AccountPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrumentid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  productid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&totalvolume_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&totalvolume_)) + sizeof(direction_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string InstrumentID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instrumentid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "position.AccountPosition.InstrumentID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ProductID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_productid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "position.AccountPosition.ProductID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .position.PosDirection Direction = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_direction(static_cast<::position::PosDirection>(val));
        } else goto handle_unusual;
        continue;
      // int64 TotalVolume = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          totalvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 TodayVolume = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          todayvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:position.AccountPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string InstrumentID = 1;
  if (this->instrumentid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instrumentid().data(), static_cast<int>(this->_internal_instrumentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "position.AccountPosition.InstrumentID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instrumentid(), target);
  }

  // string ProductID = 2;
  if (this->productid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_productid().data(), static_cast<int>(this->_internal_productid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "position.AccountPosition.ProductID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_productid(), target);
  }

  // .position.PosDirection Direction = 3;
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_direction(), target);
  }

  // int64 TotalVolume = 4;
  if (this->totalvolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_totalvolume(), target);
  }

  // int64 TodayVolume = 5;
  if (this->todayvolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_todayvolume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:position.AccountPosition)
  return target;
}

size_t AccountPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:position.AccountPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string InstrumentID = 1;
  if (this->instrumentid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instrumentid());
  }

  // string ProductID = 2;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_productid());
  }

  // int64 TotalVolume = 4;
  if (this->totalvolume() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totalvolume());
  }

  // int64 TodayVolume = 5;
  if (this->todayvolume() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_todayvolume());
  }

  // .position.PosDirection Direction = 3;
  if (this->direction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:position.AccountPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:position.AccountPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:position.AccountPosition)
    MergeFrom(*source);
  }
}

void AccountPosition::MergeFrom(const AccountPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:position.AccountPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrumentid().size() > 0) {
    _internal_set_instrumentid(from._internal_instrumentid());
  }
  if (from.productid().size() > 0) {
    _internal_set_productid(from._internal_productid());
  }
  if (from.totalvolume() != 0) {
    _internal_set_totalvolume(from._internal_totalvolume());
  }
  if (from.todayvolume() != 0) {
    _internal_set_todayvolume(from._internal_todayvolume());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
}

void AccountPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:position.AccountPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountPosition::CopyFrom(const AccountPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:position.AccountPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountPosition::IsInitialized() const {
  return true;
}

void AccountPosition::InternalSwap(AccountPosition* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instrumentid_.Swap(&other->instrumentid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  productid_.Swap(&other->productid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccountPosition, direction_)
      + sizeof(AccountPosition::direction_)
      - PROTOBUF_FIELD_OFFSET(AccountPosition, totalvolume_)>(
          reinterpret_cast<char*>(&totalvolume_),
          reinterpret_cast<char*>(&other->totalvolume_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccPosWrapper::InitAsDefaultInstance() {
  ::position::_AccPosWrapper_default_instance_._instance.get_mutable()->longpos_ = const_cast< ::position::AccountPosition*>(
      ::position::AccountPosition::internal_default_instance());
  ::position::_AccPosWrapper_default_instance_._instance.get_mutable()->shortpos_ = const_cast< ::position::AccountPosition*>(
      ::position::AccountPosition::internal_default_instance());
}
class AccPosWrapper::_Internal {
 public:
  static const ::position::AccountPosition& longpos(const AccPosWrapper* msg);
  static const ::position::AccountPosition& shortpos(const AccPosWrapper* msg);
};

const ::position::AccountPosition&
AccPosWrapper::_Internal::longpos(const AccPosWrapper* msg) {
  return *msg->longpos_;
}
const ::position::AccountPosition&
AccPosWrapper::_Internal::shortpos(const AccPosWrapper* msg) {
  return *msg->shortpos_;
}
AccPosWrapper::AccPosWrapper(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:position.AccPosWrapper)
}
AccPosWrapper::AccPosWrapper(const AccPosWrapper& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_longpos()) {
    longpos_ = new ::position::AccountPosition(*from.longpos_);
  } else {
    longpos_ = nullptr;
  }
  if (from._internal_has_shortpos()) {
    shortpos_ = new ::position::AccountPosition(*from.shortpos_);
  } else {
    shortpos_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:position.AccPosWrapper)
}

void AccPosWrapper::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccPosWrapper_position_2eproto.base);
  ::memset(&longpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shortpos_) -
      reinterpret_cast<char*>(&longpos_)) + sizeof(shortpos_));
}

AccPosWrapper::~AccPosWrapper() {
  // @@protoc_insertion_point(destructor:position.AccPosWrapper)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccPosWrapper::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete longpos_;
  if (this != internal_default_instance()) delete shortpos_;
}

void AccPosWrapper::ArenaDtor(void* object) {
  AccPosWrapper* _this = reinterpret_cast< AccPosWrapper* >(object);
  (void)_this;
}
void AccPosWrapper::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccPosWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccPosWrapper& AccPosWrapper::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccPosWrapper_position_2eproto.base);
  return *internal_default_instance();
}


void AccPosWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:position.AccPosWrapper)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && longpos_ != nullptr) {
    delete longpos_;
  }
  longpos_ = nullptr;
  if (GetArena() == nullptr && shortpos_ != nullptr) {
    delete shortpos_;
  }
  shortpos_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccPosWrapper::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .position.AccountPosition longpos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_longpos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .position.AccountPosition shortpos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_shortpos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccPosWrapper::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:position.AccPosWrapper)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .position.AccountPosition longpos = 1;
  if (this->has_longpos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::longpos(this), target, stream);
  }

  // .position.AccountPosition shortpos = 2;
  if (this->has_shortpos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::shortpos(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:position.AccPosWrapper)
  return target;
}

size_t AccPosWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:position.AccPosWrapper)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .position.AccountPosition longpos = 1;
  if (this->has_longpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *longpos_);
  }

  // .position.AccountPosition shortpos = 2;
  if (this->has_shortpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *shortpos_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccPosWrapper::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:position.AccPosWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const AccPosWrapper* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccPosWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:position.AccPosWrapper)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:position.AccPosWrapper)
    MergeFrom(*source);
  }
}

void AccPosWrapper::MergeFrom(const AccPosWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:position.AccPosWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_longpos()) {
    _internal_mutable_longpos()->::position::AccountPosition::MergeFrom(from._internal_longpos());
  }
  if (from.has_shortpos()) {
    _internal_mutable_shortpos()->::position::AccountPosition::MergeFrom(from._internal_shortpos());
  }
}

void AccPosWrapper::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:position.AccPosWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccPosWrapper::CopyFrom(const AccPosWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:position.AccPosWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccPosWrapper::IsInitialized() const {
  return true;
}

void AccPosWrapper::InternalSwap(AccPosWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccPosWrapper, shortpos_)
      + sizeof(AccPosWrapper::shortpos_)
      - PROTOBUF_FIELD_OFFSET(AccPosWrapper, longpos_)>(
          reinterpret_cast<char*>(&longpos_),
          reinterpret_cast<char*>(&other->longpos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AccPosWrapper::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace position
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::position::AccountPosition* Arena::CreateMaybeMessage< ::position::AccountPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::position::AccountPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::position::AccPosWrapper* Arena::CreateMaybeMessage< ::position::AccPosWrapper >(Arena* arena) {
  return Arena::CreateMessageInternal< ::position::AccPosWrapper >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
